<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
	xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">
	<munit:config name="error-handling-tests.xml" doc:description="This test suite is intended to test the error handling of each endpoint. Given and invalid request, the end point returns the appropriate status code and expected error response. "/>
	<http:request-config name="MUNIT_HTTP_Request_configuration1" doc:name="HTTP Request configuration" doc:id="adc038b3-75f0-4ccb-bc8a-7573c85eaa09" >
		<http:request-connection host="localhost" port="8081" />
	</http:request-config>
	<munit:test name="list-appointments-invalid-patient-response" doc:id="dd9ba846-dca2-4213-afd1-6b74d532a4ac" expectedErrorType="HTTP:NOT_FOUND">
		<munit:enable-flow-sources >
			<munit:enable-flow-source value="listAppointmentsForPatient" />
			<munit:enable-flow-source value="listAppointmentsApiFlow" />
		</munit:enable-flow-sources>
		<munit:execution >
			<http:request method="GET" doc:name="GET /patients/{id}/appointments" doc:id="f7df164f-1d9a-44d4-9d6b-53e8d5900c89" config-ref="MUNIT_HTTP_Request_configuration1" path="/patients/999/appointments"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="statusCode = 404" doc:id="f1aab51d-f0ff-42e7-a0c3-752e2f8cf71e" expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(404)]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="delete-appointment-invalid-appointment-response" doc:id="77f8348f-0810-4eec-aa9b-abaf3494748d" expectedErrorType="HTTP:NOT_FOUND">
		<munit:enable-flow-sources >
			<munit:enable-flow-source value="deleteAppointmentsApiFlow" />
			<munit:enable-flow-source value="deleteAppointment" />
		</munit:enable-flow-sources>
		<munit:behavior >
			<munit-tools:mock-when doc:name="update db" doc:id="f9b12e68-1a0d-40ac-95a1-f6498b7c9a7a" processor="db:update">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="appointment" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="4c735450-3d73-4fa1-b955-68c0756b79cb" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[{affectedRows: 0, generatedKeys: {GENERATED_KEY: 123}}]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<http:request method="GET" doc:name="DELETE /appointments/{id}" doc:id="eb0357b2-08d4-4d7f-8ce7-cdfb759ff717" config-ref="MUNIT_HTTP_Request_configuration1" path="/appointments/999"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="statusCode = 404" doc:id="4c61bdf6-113a-4884-a6fb-ea85041ee682" expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(404)]"/>
		</munit:validation>
	</munit:test>

</mule>
